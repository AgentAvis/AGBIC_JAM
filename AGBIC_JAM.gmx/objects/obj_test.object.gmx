<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_boat</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>self</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>yspd = 0;
acc = 0;
ang_prev = 0;
density = 0.125;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>view_wview = (abs(acc)*64)+480;
view_hview = (view_wview*9)/16;
view_xview = x-(view_wview/2);
view_yview = y-(view_hview/2);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Relocate
/*
x = mouse_x;
y = mouse_y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//avis's code
    //define movement keys
    left  = keyboard_check(ord('A')) + keyboard_check(vk_left)
    right = keyboard_check(ord('D')) + keyboard_check(vk_right)
    r_key = keyboard_check_pressed(ord('R'))
    
        if b {
        //if i'm boarded
        if left { acc -= .2 }
        if right{ acc += .2 }
        if r_key{ room_restart() }
        
        if keyboard_check_pressed(ord('F')) and place_meeting(x,y,obj_latter) and b {
            //un-boarding code
            b = false
            instance_create(x,y - 64,obj_player)
            speed *= .3
        }
    }
    
    //if the player exists then the ship can't be boarded (and the opposite)
    if instance_exists(obj_player) { b = false } else { b = true }
    
//sam's code
 var __vspd = (y-yprevious)/3, //This instance's vertical speed
 __pos = mean(bbox_left,bbox_right),
 __pos1 = bbox_right,
 __pos2 = bbox_left; //And it's horizontal center
 with obj_water {
  __pos -= x; //Compared to the water's placement
  __pos = clamp(round(__pos/sprite_width*nodes),0,nodes-1); //Converted to placement in array
  
  __pos1 -= x; //Compared to the water's placement
  __pos1 = clamp(round(__pos1/sprite_width*nodes),0,nodes-1); //Converted to placement in array
  
  __pos2 -= x; //Compared to the water's placement
  __pos2 = clamp(round(__pos2/sprite_width*nodes),0,nodes-1); //Converted to placement in array
 }
 
var wpos =(obj_water.ypos[__pos])+obj_water.y;

//obj_water.vspd[i] = 0;
//y = lerp(yprevious,wpos + choose(.1,-.1),0.5);

//wpos is the node position beneath the boat precalculated
if y &lt; wpos { yspd += .2}
else
{
    yspd = 0;
   y = wpos+sign(yspd)*power(yspd,2)*-0.05;
}
y+= yspd;
x+= acc;

if abs(acc) &gt; 2
{
    acc = sign(acc)*2;
}

if acc &gt; 0
{
    acc -= .025;
    obj_water.vspd[__pos1] -= .75*(acc/2);
    image_xscale = 1;
}

if acc &lt; 0
{
    acc += .025;
    obj_water.vspd[__pos2] -= .75*(abs(acc)/2);
    image_xscale = -1;
}

image_angle += obj_water.ypos[__pos-1]-obj_water.ypos[__pos+1];

image_angle = clamp(lerp(ang_prev,image_angle,0.5),-4,4);
ang_prev = image_angle;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_water">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Splash water
if is_water_surface_collision {
 var __vspd = (y-yprevious)/3, //This instance's vertical speed
 __pos = mean(bbox_left,bbox_right); //And it's horizontal center
 with other {
  __pos -= x; //Compared to the water's placement
  __pos = clamp(round(__pos/sprite_width*nodes),0,nodes-1); //Converted to placement in array
  vspd[__pos] += __vspd;
 }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
